@use '@innomotics/brand-experience/styles/colors';
@use '@innomotics/brand-experience/styles/componentmixins';

@mixin light-base {
  background-color: colors.$background-light-200;
  color: colors.$text-light-lowemphasis;
  font-size: 16px;
  font-weight: 400;
}

@mixin dark-base {
  background-color: colors.$background-dark-200;
  color: colors.$text-dark-lowemphasis;
  font-size: 16px;
  font-weight: 400;
}

:host {
  display: block;
  height: 56px;
  min-height: 56px;
  max-height: 56px;
  padding: 0px 0px 0px 16px;
  margin: 5px 5px 8px 5px;
  border: 1px solid colors.$additional-light-300;
  cursor: text;

  &.textareamode {
    height: unset;
    max-height: unset;
    margin: 0;
    padding: 16px 5px 16px 16px;

    position: relative;
    pointer-events: all;
  }

  &.can-show-errors {
    margin-bottom: 23px;
  }

  &.light {
    @include light-base;

    &:hover:not(.disabled):not(:disabled) {
      border: 1px solid colors.$interaction-light-hover;
      box-shadow: inset 0px 0px 0px 1px colors.$interaction-light-hover;
    }

    ::slotted(input),
    ::slotted(textarea) {
      @include light-base;

      color: colors.$text-light-highemphasis;

      &:-webkit-autofill {
        -webkit-text-fill-color: colors.$text-light-highemphasis;
        -webkit-box-shadow: 0 0 0px 1000px colors.$background-light-200 inset;
      }

      &.disabled,
      &:disabled,
      &:read-only {
        background-color: rgba(colors.$transparency-light-100, 0);
        -webkit-text-fill-color: unset;
        -webkit-box-shadow: unset;
        box-shadow: unset;
        pointer-events: none;
      }
    }

    &.isactive {
      &:hover:not(.disabled):not(:disabled) {
        box-shadow: inset 0px 0px 0px 1px colors.$highlight-light-100;
        border: 1px solid colors.$highlight-light-100;
      }

      border: 1px solid colors.$highlight-light-100;
      box-shadow: inset 0px 0px 0px 1px colors.$highlight-light-100;

      &.disabled,
      &:disabled {
        box-shadow: inset 0px 0px 0px 1px colors.$additional-light-300;
        border: 1px solid colors.$additional-light-300;
        background-color: colors.$transparency-light-100;
      }
    }

    &.focused {
      @include componentmixins.focus;
    }

    &.invalid {
      box-shadow: inset 0px 0px 0px 1px colors.$status-light-error;
      border: 1px solid colors.$status-light-error;
    }

    &.disabled {
      background-color: colors.$transparency-light-200;
    }

    ::slotted(textarea) {
      background-color: transparent !important;
      pointer-events: all;

      &::-webkit-scrollbar {
        width: 5px;
      }

      &::-webkit-scrollbar-thumb {
        background: colors.$secondary-800;
      }

      &::-webkit-scrollbar-track {
        background: colors.$secondary-200;
      }
    }
  }

  &.dark {
    @include dark-base;

    &:hover:not(.disabled):not(:disabled) {
      box-shadow: inset 0px 0px 0px 1px colors.$interaction-dark-hover;
    }

    &.disabled {
      background-color: colors.$transparency-dark-100;
    }

    ::slotted(input),
    ::slotted(textarea) {
      @include dark-base;

      color: colors.$text-dark-highemphasis;

      &:-webkit-autofill {
        -webkit-text-fill-color: colors.$text-dark-highemphasis;
        -webkit-box-shadow: 0 0 0px 1000px colors.$background-dark-200 inset;
        box-shadow: 0 0 0px 1000px colors.$background-dark-200 inset;
      }

      &.disabled,
      &:disabled,
      &:read-only {
        background-color: rgba(colors.$transparency-dark-100, 0);
        color: colors.$text-dark-highemphasis;
        -webkit-box-shadow: unset;
        box-shadow: unset;
        pointer-events: none;
      }
    }

    &.isactive {
      &:hover:not(.disabled):not(:disabled) {
        box-shadow: inset 0px 0px 0px 1px colors.$additional-dark-300;
        border: 1px solid colors.$additional-dark-300;
      }

      border: 1px solid colors.$highlight-dark-100;
      box-shadow: inset 0px 0px 0px 1px colors.$highlight-dark-100;

      &.disabled,
      &:disabled {
        box-shadow: inset 0px 0px 0px 1px colors.$additional-dark-300;
        border: 1px solid colors.$additional-dark-300;
      }
    }

    &.focused {
      @include componentmixins.focus;
    }

    &.invalid {
      box-shadow: inset 0px 0px 0px 1px colors.$status-dark-error;
      border: 1px solid colors.$status-dark-error;
    }

    ::slotted(textarea) {
      background-color: transparent !important;
      pointer-events: all;

      &.disabled,
      &:disabled,
      &:read-only {
        pointer-events: all;
      }

      &::-webkit-scrollbar {
        width: 5px;
      }

      &::-webkit-scrollbar-thumb {
        background: colors.$secondary-300;
      }

      &::-webkit-scrollbar-track {
        background: colors.$secondary-800;
      }
    }
  }

  ::slotted(input) {
    width: 100%;
    border: none;
    outline: none;
    margin-top: calc(56px - 30px);
  }

  ::slotted(textarea) {
    width: 100% !important;
    height: 100% !important;

    border: 0;
    outline: 0;
    resize: none;
  }

  .label {
    left: auto;
    right: auto;
    z-index: 1;
    pointer-events: none;
    transition: 0.2s cubic-bezier(0.84, 0, 0.58, 1) all;
    transform: translate(0rem, 1.2rem) scale(1);
    position: absolute;

    &.light {
      &.invalid {
        color: colors.$status-light-error;
      }

      &.disabled {
        color: colors.$text-light-lowemphasis;
      }
    }

    &.dark {
      &.invalid {
        color: colors.$status-dark-error;
      }

      &.disabled {
        color: colors.$text-dark-lowemphasis;
      }
    }

    &.float {
      transform: translate(0rem, 0.5rem) scale(1);
      font-size: 12px;
    }

    &.textareamode {
      transform: translate(0rem, -0.2rem) scale(1);

      &.floatarea {
        transform: translate(0rem, -0.9rem) scale(1);
        font-size: 12px;
      }
    }
  }

  &.disabled {
    border: 1px solid colors.$interaction-light-disabled;
  }
}

.seizer {
  position: absolute;
  bottom: -17px;
  right: -15px;
  cursor: nw-resize;
  z-index: 1;

  &.seizer-with-scrollbar {
    // Currently seizer is not moved
  }
}
