@use '@innomotics/brand-experience/styles/colors';
@use '@innomotics/brand-experience/styles/componentmixins';

@mixin light-base {
  background-color: colors.$background-light-200;
  color: colors.$text-light-lowemphasis;
}

@mixin dark-base {
  background-color: colors.$background-dark-200;
  color: colors.$text-dark-lowemphasis;
}

:host {
  display: block;
  height: 56px;
  padding: 0px 16px 0px 16px;
  margin: 5px 5px 23px 5px;
  border: 1px solid colors.$additional-light-300;
  cursor: text;

  &.light {
    @include light-base;

    &:hover:not(.disabled):not(:disabled) {
      border: 1px solid colors.$interaction-light-hover;
      box-shadow: 0px 0px 0px 1px colors.$interaction-light-hover;
    }
    ::slotted(input) {
      @include light-base;
      color: colors.$text-light-highemphasis;
      &.disabled:disabled {
        background-color: rgba(colors.$transparency-light-100, 0);
      }
    }
    &.isactive {
      &:hover:not(.disabled):not(:disabled) {
        box-shadow: 0px 0px 0px 1px colors.$highlight-light-100;
        border: 1px solid colors.$highlight-light-100;
      }
      border: 1px solid colors.$highlight-light-100;
      box-shadow: 0px 0px 0px 1px colors.$highlight-light-100;
      &.disabled:disabled {
        box-shadow: 0px 0px 0px 1px colors.$additional-light-300;
        border: 1px solid colors.$additional-light-300;
        background-color: colors.$transparency-light-100;
      }
    }
    &.focused {
      @include componentmixins.focus;
    }
    &.invalid {
      box-shadow: 0px 0px 0px 1px colors.$status-light-error;
      border: 1px solid colors.$status-light-error;
    }
  }

  &.dark {
    @include dark-base;
    &:hover:not(.disabled):not(:disabled) {
      box-shadow: 0px 0px 0px 1px colors.$interaction-dark-hover;
    }
    &.disabled {
      background-color: colors.$transparency-dark-100;
    }

    ::slotted(input) {
      @include dark-base;
      color: colors.$text-dark-highemphasis;
      &.disabled {
        background-color: rgba(colors.$transparency-dark-100, 0);
        color: colors.$text-dark-highemphasis;
      }
    }
    &.isactive {
      &:hover:not(.disabled):not(:disabled) {
        box-shadow: 0px 0px 0px 1px colors.$additional-dark-300;
        border: 1px solid colors.$additional-dark-300;
      }
      border: 1px solid colors.$highlight-dark-100;
      box-shadow: 0px 0px 0px 1px colors.$highlight-dark-100;
      &.disabled:disabled {
        box-shadow: 0px 0px 0px 1px colors.$additional-dark-300;
        border: 1px solid colors.$additional-dark-300;
      }
    }
    &.focused {
      @include componentmixins.focus;
    }
    &.invalid {
      box-shadow: 0px 0px 0px 1px colors.$status-dark-error;
      border: 1px solid colors.$status-dark-error;
    }
  }

  ::slotted(input) {
    width: 100%;
    border: none;
    outline: none;
    margin-top: calc(56px - 30px);
  }

  .label {
    left: auto;
    right: auto;
    z-index: 1;
    pointer-events: none;
    transition: 0.2s ease all;
    transform: translate(0rem, 1.2rem) scale(1);
    position: absolute;
    &.light {
      &.disabled {
        color: colors.$text-light-lowemphasis;
      }
    }
    &.dark {
      &.disabled {
        color: colors.$text-dark-lowemphasis;
      }
    }
  }
  .float {
    transform: translate(0rem, 0.5rem) scale(1);
    font-size: small;
  }
  &.disabled {
    border: 1px solid colors.$interaction-light-disabled;
  }
}
